title: Next month
set-bg: img/map_2.jpg
is-hand: true
on-arrival: {!
if (!Q._initialized) {

    function getDaysInMonth(month, year) {
    const daysInMonth = {
        1: 31,
        2: (year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)) ? 29 : 28,
        3: 31,
        4: 30,
        5: 31,
        6: 30,
        7: 31,
        8: 31,
        9: 30,
        10: 31,
        11: 30,
        12: 31
    };
    return daysInMonth[month];
    }

    Q._initialized = true;

    setInterval(function() {
        Q.time += 1;
        Q.day = (Q.day || 1) + 1;

        const daysThisMonth = getDaysInMonth(Q.month, Q.year);

        if (Q.day > daysThisMonth) {
            Q.day = 1;
            Q.month += 1;

            if (Q.month > 12) {
                Q.month = 1;
                Q.year += 1;

                if (Q.historical_mode) {
                    Q.resources += 2;
                }
            }
        }

        if (Q.current_scene === 'status' && typeof visit === 'function') {
            visit('status'); // Revisit the scene to force a redraw
        }


        // Example: Decrease advisor cooldowns
        if (Q.advisor_action_timer > 0 && Q.day % 30 == 0) {
            Q.advisor_action_timer -= 1;
        }

setInterval(function () {
    if (!this.game?.scenes?.['main.events_choice']) return;

    const scene = this.game.scenes['main.events_choice'];
    const choices = this._compileChoices?.(scene);

    const hasRealEvent = choices && choices.length && choices[0].title !== "Continue...";

    if (hasRealEvent && Q.current_scene === 'main') {
        visit('main'); // Trigger the event logic while staying in the same scene
    }

    Q.has_event = hasRealEvent ? 1 : 0;
}, 1000);

        window.updateSidebar();


    }, 1000); // 1000ms = 1 second
}
if (Q.advisor_action_timer <= 0) {
    Q.pinnedCardsDescription = 'Advisors - an action is available.';
} else if (Q.advisor_action_timer == 1) {
    Q.pinnedCardsDescription = 'Advisors - next action available in 1 month.';
} else {
    Q.pinnedCardsDescription = 'Advisors - next action available in ' + Q.advisor_action_timer + ' months.';
}
!}
max-cards: 3
go-to: events_choice if has_event

#Here, the main deck will be displayed. Clicking on the deck draws a card into your hand. Clicking on a card activates that card.

#Here, the main deck will be displayed. Clicking on the deck draws a card into your hand. Clicking on a card activates that card.

[? if year = 1928 and month = 2 : The current bourgeois-right government has fallen. The next elections are slated for May of this year. ?]

- @party
- @govt
- #advisor
- @shuffle_leadership_pinned

@main_easy
set-bg: img/map_2.jpg
is-hand: true
on-arrival: {!
if (!Q._initialized) {

    function getDaysInMonth(month, year) {
    const daysInMonth = {
        1: 31,
        2: (year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)) ? 29 : 28,
        3: 31,
        4: 30,
        5: 31,
        6: 30,
        7: 31,
        8: 31,
        9: 30,
        10: 31,
        11: 30,
        12: 31
    };
    return daysInMonth[month];
    }

    Q._initialized = true;

    setInterval(function() {
        Q.time += 1;
        Q.day = (Q.day || 1) + 1;

        const daysThisMonth = getDaysInMonth(Q.month, Q.year);

        if (Q.day > daysThisMonth) {
            Q.day = 1;
            Q.month += 1;

            if (Q.month > 12) {
                Q.month = 1;
                Q.year += 1;

                if (Q.historical_mode) {
                    Q.resources += 2;
                }
            }
        }

        if (Q.current_scene === 'status' && typeof visit === 'function') {
            visit('status'); // Revisit the scene to force a redraw
        }


        // Example: Decrease advisor cooldowns
        if (Q.advisor_action_timer > 0 && Q.day % 30 == 0) {
            Q.advisor_action_timer -= 1;
        }

setInterval(function () {
    if (!this.game?.scenes?.['main.events_choice']) return;

    const scene = this.game.scenes['main.events_choice'];
    const choices = this._compileChoices?.(scene);

    const hasRealEvent = choices && choices.length && choices[0].title !== "Continue...";

    if (hasRealEvent && Q.current_scene === 'main') {
        visit('main'); // Trigger the event logic while staying in the same scene
    }

    Q.has_event = hasRealEvent ? 1 : 0;
}, 1000);

        window.updateSidebar();



    }, 1000); // 1000ms = 1 second
}
if (Q.advisor_action_timer <= 0) {
    Q.pinnedCardsDescription = 'Advisors - an action is available.';
} else if (Q.advisor_action_timer == 1) {
    Q.pinnedCardsDescription = 'Advisors - next action available in 1 month.';
} else {
    Q.pinnedCardsDescription = 'Advisors - next action available in ' + Q.advisor_action_timer + ' months.';
}
!}
max-cards: 4
go-to: events_choice if has_event

#Here, the main deck will be displayed. Clicking on the deck draws a card into your hand. Clicking on a card activates that card.

[? if year = 1928 and month = 2 : The current bourgeois-right government has fallen. The next elections are slated for May of this year. ?]

- @party
- @govt
- #advisor
- @shuffle_leadership_pinned


@party
title: Party Affairs
card-image: img/Vorwaerts_nr_1.png
is-deck: true

- #party_affairs

@govt
title: Government Affairs
view-if: time >= 6 or spd_in_government
card-image: img/reichstag_2.jpg
is-deck: true

- #govt_affairs

@events_choice

- #event

